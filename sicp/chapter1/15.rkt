#lang racket/base

(require rackunit)

(define (cube x) (* x x x))

(define (p x) (- (* 3 x) (* 4 (cube x))))

(define (sine angle)
    (if (not (> (abs angle) 0.1))
        angle
        (p (sine (/ angle 3.0)))))

(sine 12.15)

; a. How many times is the procedure p applied when (sine 12.15) is evaluated?

; My answer is 5 times
; 12.15 > 0.1 ---------- 1
; 12.15 / 3 = 4.05
; 4.05 > 0.1 ----------- 2
; 4.05 / 3 = 1.35
; 1.35 > 0.1 ----------- 3
; 1.35 / 3 = 0.45
; 0.45 > 0.1 ----------- 4
; 0.45 / 3 = 0.15
; 0.15 > 0.1 ----------- 5
; 0.15 / 3 = 0.05
; 0.05 < 0.1 ----------- done

; b. What is the order of growth in space and number of steps (as a function of a)
; used by the process generated by the sine procedure when (sine a) is evaluated?
;
; The order of growth looks linear for me. I.e. Theta(log(a))
; The function works while a/3 >= 0.1
; If "n" is number of iterations (steps) then
; The function stops after a/3^n >= 0.1
; I.e. n >= log(10a)
; I.e. number of steps grouth with order Theta(log(a))
; The same with space.
